// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Admin {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
}

model Doctor {
  id           Int            @id @default(autoincrement())
  firstname    String
  lastname     String
  username     String         @unique
  password     String
  gender       String
  phone        String
  address      String
  Prescription Prescription[]
}

model Patient {
  id                     Int                      @id @default(autoincrement())
  name                   String
  dateOfBirth            DateTime
  gender                 String
  maritalStatus          String
  district               String
  occupation             String
  refBy                  String
  phone                  String
  note                   String? // Optional field
  Prescription           Prescription[]
  PatientPersonalHistory PatientPersonalHistory[]
  PatientFamilyHistory   PatientFamilyHistory[]
  PatientMedicalHistory  PatientMedicalHistory[]
  PatientSurgicalHistory PatientSurgicalHistory[]
  PatientDrugHistory     PatientDrugHistory[]
  PatientExamFinding     PatientExamFinding[]
  PatientDiagnosis       PatientDiagnosis[]
  PatientManagementPlan  PatientManagementPlan[]
  PatientInvestigation   PatientInvestigation[]
}

model Prescription {
  id                     Int                      @id @default(autoincrement())
  patientId              Int
  patient                Patient                  @relation(fields: [patientId], references: [id])
  doctorId               Int
  doctor                 Doctor                   @relation(fields: [doctorId], references: [id])
  dateCreated            DateTime                 @default(now())
  nextVisit              DateTime?
  PrescriptionComplaint  PrescriptionComplaint[]
  PrescriptionTreatment  PrescriptionTreatment[]
  PrescriptionAdvice     PrescriptionAdvice[]
  PrescriptionAttachment PrescriptionAttachment[]
}

model PrescriptionComplaint {
  id             Int          @id @default(autoincrement())
  prescriptionId Int
  prescription   Prescription @relation(fields: [prescriptionId], references: [id])
  complaint      String
  value          String?
}

model PrescriptionTreatment {
  id             Int          @id @default(autoincrement())
  prescriptionId Int
  prescription   Prescription @relation(fields: [prescriptionId], references: [id])
  drug           String
  dose           String
  rule           String
  duration       String
}

model PrescriptionAdvice {
  id             Int          @id @default(autoincrement())
  prescriptionId Int
  prescription   Prescription @relation(fields: [prescriptionId], references: [id])
  advice         String
}

model PrescriptionAttachment {
  id             Int          @id @default(autoincrement())
  prescriptionId Int
  prescription   Prescription @relation(fields: [prescriptionId], references: [id])
  file           String
}

model PatientPersonalHistory {
  id        Int     @id @default(autoincrement())
  patientId Int
  patient   Patient @relation(fields: [patientId], references: [id])
  attribute String
  value     String?
}

model PatientFamilyHistory {
  id        Int     @id @default(autoincrement())
  patientId Int
  patient   Patient @relation(fields: [patientId], references: [id])
  attribute String
  value     String?
}

model PatientMedicalHistory {
  id        Int     @id @default(autoincrement())
  patientId Int
  patient   Patient @relation(fields: [patientId], references: [id])
  attribute String
  value     String?
}

model PatientSurgicalHistory {
  id        Int     @id @default(autoincrement())
  patientId Int
  patient   Patient @relation(fields: [patientId], references: [id])
  attribute String
  value     String?
}

model PatientDrugHistory {
  id        Int     @id @default(autoincrement())
  patientId Int
  patient   Patient @relation(fields: [patientId], references: [id])
  attribute String
  value     String?
}

model PatientExamFinding {
  id        Int     @id @default(autoincrement())
  patientId Int
  patient   Patient @relation(fields: [patientId], references: [id])
  attribute String
  value     String?
}

model PatientDiagnosis {
  id        Int     @id @default(autoincrement())
  patientId Int
  patient   Patient @relation(fields: [patientId], references: [id])
  attribute String
  value     String?
}

model PatientManagementPlan {
  id        Int     @id @default(autoincrement())
  patientId Int
  patient   Patient @relation(fields: [patientId], references: [id])
  attribute String
  value     String?
}

model PatientInvestigation {
  id        Int     @id @default(autoincrement())
  patientId Int
  patient   Patient @relation(fields: [patientId], references: [id])
  attribute String
  value     String?
}

// Presets Models

model Complaint {
  id         Int    @id @default(autoincrement())
  complaint  String
}

model PersonalHistory {
  id              Int    @id @default(autoincrement())
  personalHistory String
}

model FamilyHistory {
  id            Int    @id @default(autoincrement())
  familyHistory String
}

model DrugHistory {
  id         Int    @id @default(autoincrement())
  drugHistory String
}

model ExamFinding {
  id         Int    @id @default(autoincrement())
  examFinding String
}

model Diagnosis {
  id        Int    @id @default(autoincrement())
  diagnosis String
}

model MedicalHistory {
  id             Int    @id @default(autoincrement())
  medicalHistory String
}

model SurgicalHistory {
  id            Int    @id @default(autoincrement())
  surgicalHistory String
}

model Treatment {
  id        Int    @id @default(autoincrement())
  treatment String
}

model ManagementPlan {
  id             Int    @id @default(autoincrement())
  managementPlan String
}

model Investigation {
  id           Int    @id @default(autoincrement())
  investigation String
}

model Advice {
  id     Int    @id @default(autoincrement())
  advice String
}
